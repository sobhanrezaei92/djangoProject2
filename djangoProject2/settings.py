"""
Django settings for djangoProject2 project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-e9p@w)^-0e^od(q@e14=4(abicx4sqmum-1g677a8h_=r8^jyt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'homepage',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangoProject2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangoProject2.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
ORDER_STATUS = [
    ('pending', 'pending'),
    ('processing', 'processing'),
    ('on-hold', 'on-hold'),
    ('completed', 'completed'),
    ('cancelled', 'cancelled'),
    ('refunded', 'refunded'),
    ('failed', 'failed'),
    ('trash', 'trash'),
]

TYPE_KIND = [
    ('simple', 'simple'),
    ('grouped', 'grouped'),
    ('external', 'external'),
    ('variable', 'variable'),
]

STATUS_PRODUCT = [
    ('draft', 'draft'),
    ('pending', 'pending'),
    ('private', 'private'),
    ('publish', 'publish'),
]

CATALOG_VISIBILITY_PRODUCT =[
    ('visible', 'visible'),
    ('catalog', 'catalog'),
    ('search', 'search'),
    ('hidden', 'hidden'),

]

TAX_STATUS_PRODUCT = [
    ('taxable', 'taxable'),
    ('shipping', 'shipping'),
    ('none', 'none'),

]

STOCK_STATUS_PRODUCT = [
    ('instock', 'instock'),
    ('outofstock', 'outofstock'),
    ('onbackorder', 'onbackorder'),

]

BACKORDERS_PRODUCT = [
    ('no', 'no'),
    ('notify', 'notify'),
    ('yes', 'yes'),

]

STATUS_PRODUCT_VARIATION = [
    ('draft', 'draft'),
    ('pending', 'pending'),
    ('private', 'private'),
    ('publish', 'publish'),

]


TAX_STATUS_PRODUCT_VARIATION = [
    ('taxable', 'taxable'),
    ('shipping', 'shipping'),
    ('none', 'none'),
]

STOCK_STATUS_PRODUCT_VARIATION = [
    ('instock', 'instock'),
    ('outofstock', 'outofstock'),
    ('onbackorder', 'onbackorder'),

]

BACKORDERS_PRODUCT_VARIATION = [
    ('no', 'no'),
    ('notify', 'notify'),
    ('yes', 'yes'),


]

ORDER_BY_PRODUCT_ATTRIBUTE = [
    ('menu_order', 'menu_order'),
    ('name', 'name'),
    ('name_num', 'name_num'),
    ('id', 'id'),


]

DISPLAY_PRODUCT_CATEGORY = [
    ('default', 'default'),
    ('products', 'products'),
    ('subcategories', 'subcategories'),
    ('both', 'both'),


]

STATUS_PRODUCT_REVIEW = [
    ('approved', 'approved'),
    ('hold', 'hold'),
    ('spam', 'spam'),
    ('unspam', 'unspam'),
    ('trash', 'trash'),
    ('untrash', 'untrash'),


]


DISCOUNT_TYPE_COUPONS = [
    ('percent', 'percent'),
    ('fixed_cart', 'fixed_cart'),
    ('fixed_product', 'fixed_product'),


]


STATUS_PRODUCT_VARIATION = [
    ('draft', 'draft'),
    ('pending', 'pending'),
    ('private', 'private'),
    ('publish', 'publish'),

]